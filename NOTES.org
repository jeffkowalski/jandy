* iAquaLink adapter
[[https://www.jandy.com/en/products/controls/system-components/interfaces/iaqualink][Jandy iAquaLink homepage]]

** pooltemp
[[https://github.com/RByers/pooltemp][Jandy iAquaLink-based pool temperature logger]]

** ioBridge
[[http://blog.iobridge.com/?s=zodiac][Articles on ioBridge blog highlighting Zodiac iAquaLink]]
https://www.iobridge.com/interface/
http://connect.iobridge.com/api/

** Control4® system pool control
driver is [[http://drivers.control4.com/solr/drivers/browse?&fq=manufacturer%3A%22Jandy%22&q=&fq=manufacturer:%22Jandy%22][pool_jandy_aqualink.c4z]]

[[https://www.scribd.com/document/84531515/Control4-Driver-Works-SDK-Driver-Works-API-Reference-Guide][Control4 DriverWorks / Software Development Kit / DriverWorks API Reference Guide]]

*** [[file:background/pool_jandy_aqualink/driver.lua.encrypted][core driver]] appears to be encrypted
https://pushstack.wordpress.com/2016/03/06/control4-driver-decryption/
https://www.control4.com/documentation/Composer_Pro_User_Guide/Using_DriverEditor.htm

*** notes on communication
[[file:background/pool_jandy_iaqualink/device_messages.lua::function%20DEV_MSG.session(tParams)][starts session, gets current state]]

[[file:background/pool_jandy_iaqualink/connections.lua::JANDY_URL%20=%20"https://zodiac-ha-api.realtime.io/v1/mobile/session.json"][connection]] :
JANDY_URL = "https://zodiac-ha-api.realtime.io/v1/mobile/session.json"

gSerialNumberData = "&serial=" .. gSerialNumber
gSessionIDData    = "&sessionID=" .. gSessionID
gActionIDData     = "&actionID=command"

gUserName
gPassword

[[file:background/pool_jandy_iaqualink/pool_driver.lua::function%20SendGetHome()][SendGetHome]]
local command = "command=get_home"
local data = command .. gSerialNumberData .. gSessionIDData .. gActionIDData
gCon:SendCommand(data, nil, true)

[[file:background/pool_jandy_iaqualink/pool_driver.lua::function%20SendGetDevices()][SendGetDevices]]
local command = "command=get_devices"
local data = command .. gSerialNumberData .. gSessionIDData .. gActionIDData
gCon:SendCommand(data)

[[file:background/pool_jandy_iaqualink/common/c4_url_connection.lua::function%20UrlConnectionBase:SendCommand(sCommand,%20sHeader,%20ignoreConnect)%0A][SendCommand]]
C4:urlPost(self._Url, sCommand)


HEAT_MODES_REV = {
  [-1] = "UNDEFINED",
  [0] = "OFF",
  [1] = "ON",
  [3] = "ENABLED"
}

zodiac-ha-api.realtime.io
see http://connect.iobridge.com/projects/

** Netlink.js
Used in [[https://iaqualink.zodiacpoolsystems.com/index.cgi?actionID=AYGvz80CfbhDR&lang=en&sub=us][Zodiac iAqualink]] website

*** Inspect
#+BEGIN_SRC shell
curl --verbose --data "userID=jeff.kowalski@gmail.com&userPassword=XXXXXXXX" --request POST "https://iaqualink.zodiacpoolsystems.com/?actionID=AAAAAAAA"
#+END_SRC

#+BEGIN_EXAMPLE
< HTTP/1.1 302 Found
< Date: Tue, 24 Apr 2018 03:11:08 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 229
< Connection: keep-alive
< Server: Apache/2.4.33 (Unix) mod_perl/2.0.10 Perl/v5.20.2
< Set-Cookie: newIOSession=ID%DDDDDDDD; domain=.zodiacpoolsystems.com; path=/; expires=Fri, 21-Apr-2028 03:11:08 GMT; secure; HttpOnly
< Location: /index.cgi?actionID=EEEEEEEE&lang=en
<
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>302 Found</title>
</head><body>
<h1>Found</h1>
<p>The document has moved <a href="/index.cgi?actionID=EEEEEEEE&amp;lang=en">here</a>.</p>
</body></html>
#+END_EXAMPLE

#+BEGIN_EXAMPLE
{"locations":[
            {
                "Id": "BBBBBBBB",
                "Name": "CAMINO VALLECITO",
                "Link": "CCCCCCCC",
                "Age": "1475775642"
            }
        ],"message":[]
}
#+END_EXAMPLE

#+BEGIN_SRC shell
curl --cookie "newIOSession=ID%DDDDDDDD" "https://touch.zodiacpoolsystems.com/?actionID=AwvnYnztnisSW"
#+END_SRC

#+BEGIN_EXAMPLE
parent.printNL('28','5||17||18||10||42');
#+END_EXAMPLE

*** code
#+BEGIN_SRC shell
  wget -O- https://touch.zodiacpoolsystems.com/files/scripts/netlink.js\?1524415822  # (parameter, which is the current time, doesn't seem useful)
#+END_SRC

Install prettier, for elisp package used in code below
#+BEGIN_SRC shell
  curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
  sudo apt-get install -y nodejs
  sudo npm install --global prettier
#+END_SRC

Improve readability of netlink code
#+BEGIN_SRC elisp
  (require 'prettier-js)
  (add-hook 'js2-mode-hook 'prettier-js-mode)

  (progn
    (message "retrieving file...")
    (switch-to-buffer (url-retrieve-synchronously "https://touch.zodiacpoolsystems.com/files/scripts/netlink.js"))

    ;; remove header
    (message "removing header...")
    (while (not (looking-at "^$"))
      (kill-line))
    (kill-line)

    ;; remove ^M
    (message "removing ^M...")
    (save-excursion
      (while (re-search-forward "" nil t)
        (replace-match "")))

    ;; (prettier-js)
    (message "writing file...")
    (write-file "netlink.js")

    ;; reformat dictionary
    (message "reformatting dictionary...")
    (save-excursion
      (while (re-search-forward "\\\\x\\([0-9A-F][0-9A-F]\\)" nil t)
        (replace-match (format "%c" (string-to-number (match-string 1) 16)))))

    ;; apply dictionary
    (message "applying dictionary...")
    (let ((dict nil))
      (re-search-forward "var _0x516c = \\[\n")
      (while (not (looking-at "\\];"))
        (progn
          (re-search-forward "\\(\".*\"\\)")
          (add-to-list 'dict (match-string 1) t)
          (next-line)
          (beginning-of-line)
          )
        )
      (save-excursion
        (while (re-search-forward "_0x516c\\[\\([0-9]+\\)\\]" nil t)
          (replace-match (nth (string-to-number (match-string 1)) dict) t t)))
      )


    (message "clarifying...")
    (let ((dict '(("_0x9888x28" . "command")
                  ("_0x9888x2a" . "responseText")
                  ("_0x9888x2b" . "responseParts")
                  ("_0x9888x2c" . "part")
                  ("_0x9888x2d" . "numResponseParts")
                  ("_0x9888x2e" . "newID")
                  ("_0x9888x36" . "now")
                  ("_0x9888x37" . "nowHours")
                  ("_0x9888x38" . "nowMinutes")
                  ("_0x9888x39" . "nowSeconds")
                  ("_0x9888x40" . "newChild")
                  ("_0x9888x4e" . "position")
                  ("_0x9888x53" . "zIndex")
                  ("_0x9888x51" . "left")
                  ("_0x9888x52" . "top")
                  ("_0x9888x50" . "height")
                  ("_0x9888x4f" . "width")
                  ("_0x9888x18" . "elementId")
                  ("_0x9888x5a" . "className")
                  ("_0x9888x5d" . "month")
                  ("_0x9888x5e" . "day")
                  ("_0x9888x5f" . "year")
                  ("_0x9888x60" . "hour")
                  ("_0x9888x61" . "minute")
                  ("_0x9888x63" . "dayName")
                  ("_0x9888x62" . "dateTime")
                  )))
      (mapcar (lambda (srpair)
                (save-excursion
                  (while (search-forward (car srpair) nil t)
                    (replace-match (cdr srpair) nil t)))) dict)
      )
      (messsage "clarifying...done")
    )
#+END_SRC
** iAquaLink android app
https://apkpure.com/iaqualink/com.zodiac.iaqualink/download?from=details

see [[file:background/iaqualink_v4.0.3_apkpure.com.apk:assets/index.android.bundle::!function(_){_.__dev__=!1,_.__bundle_start_time__=date.now()}("undefined"!=typeof%20global?global:"undefined"!=typeof%20self?self:this);][index.android.bundle]]

uses https://iaqualink-api.realtime.io/v1/mobile/session.json?
* serial adapters
** standard Zodiac adapter
[[https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&sqi=2&ved=0CDgQFjAA&url=http%3A%2F%2Fkb.homeauto.com%2Fredirfile.asp%3Fid%3D203&ei=H47eUYX0HtW64AOx2YGACA&usg=AFQjCNGFjCwHqqurxWYTNVtJC6QnD8phYg&sig2=40Hw3VpZI5g-eoMQ1fDSsg&bvm=bv.48705608,d.dmg][AquaLink RS Serial Adapter Owner’s/Installation Manual]]

** typically use a RS485 interface
[[http://www.troublefreepool.com/threads/27391-Control-your-Jandy-equipment-from-your-PC-with-a-15-adapter][Control your Jandy equipment from your PC with a $15 adapter]]

** open github projects
[[https://github.com/sfeakes/aqualinkd][linux daemon to control Aqualink RS pool controllers]]
[[https://github.com/ericbuehl/pyaqualink][Aqualink pool controller interface in Python 2]]
[[https://github.com/earlephilhower/aquaweb][Control Jandy Aqualink via a web interface]]

** alternative controller from Autelis
[[http://autelis.com/wiki/index.php?title=Pool_Control_for_Jandy/Zodiac][Autelis Pool Control for Jandy/Zodiac]]
[[http://www.autelis.com/demos/pc100jz/equipment.htm][demo]]
